//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace ScriptControlNs
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ScriptControl", Namespace = "urn:schemas-pelco-com:service:ScriptControl:1")]
    public partial class ScriptControl : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback BeginScriptOperationCompleted;

        private System.Threading.SendOrPostCallback EndScriptOperationCompleted;

        private System.Threading.SendOrPostCallback CancelScriptOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteScriptOperationCompleted;

        private System.Threading.SendOrPostCallback QueryScriptsOperationCompleted;

        private System.Threading.SendOrPostCallback ExecuteScriptOperationCompleted;

        private System.Threading.SendOrPostCallback HaltScriptOperationCompleted;

        /// <remarks/>
        public ScriptControl()
        {
            this.Url = "http://localhost:49152/control/ScriptControl-1";
        }

        /// <remarks/>
        public event BeginScriptCompletedEventHandler BeginScriptCompleted;

        /// <remarks/>
        public event EndScriptCompletedEventHandler EndScriptCompleted;

        /// <remarks/>
        public event CancelScriptCompletedEventHandler CancelScriptCompleted;

        /// <remarks/>
        public event DeleteScriptCompletedEventHandler DeleteScriptCompleted;

        /// <remarks/>
        public event QueryScriptsCompletedEventHandler QueryScriptsCompleted;

        /// <remarks/>
        public event ExecuteScriptCompletedEventHandler ExecuteScriptCompleted;

        /// <remarks/>
        public event HaltScriptCompletedEventHandler HaltScriptCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-pelco-com:service:ScriptControl:1#BeginScript", RequestNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", ResponseNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginScript([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string scriptName)
        {
            this.Invoke("BeginScript", new object[] {
                        scriptName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginScript(string scriptName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginScript", new object[] {
                        scriptName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndBeginScript(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void BeginScriptAsync(string scriptName)
        {
            this.BeginScriptAsync(scriptName, null);
        }

        /// <remarks/>
        public void BeginScriptAsync(string scriptName, object userState)
        {
            if ((this.BeginScriptOperationCompleted == null))
            {
                this.BeginScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginScriptOperationCompleted);
            }
            this.InvokeAsync("BeginScript", new object[] {
                        scriptName}, this.BeginScriptOperationCompleted, userState);
        }

        private void OnBeginScriptOperationCompleted(object arg)
        {
            if ((this.BeginScriptCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginScriptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-pelco-com:service:ScriptControl:1#EndScript", RequestNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", ResponseNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndScript([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string scriptName)
        {
            this.Invoke("EndScript", new object[] {
                        scriptName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginEndScript(string scriptName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EndScript", new object[] {
                        scriptName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndEndScript(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void EndScriptAsync(string scriptName)
        {
            this.EndScriptAsync(scriptName, null);
        }

        /// <remarks/>
        public void EndScriptAsync(string scriptName, object userState)
        {
            if ((this.EndScriptOperationCompleted == null))
            {
                this.EndScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndScriptOperationCompleted);
            }
            this.InvokeAsync("EndScript", new object[] {
                        scriptName}, this.EndScriptOperationCompleted, userState);
        }

        private void OnEndScriptOperationCompleted(object arg)
        {
            if ((this.EndScriptCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndScriptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-pelco-com:service:ScriptControl:1#CancelScript", RequestNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", ResponseNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelScript([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string scriptName)
        {
            this.Invoke("CancelScript", new object[] {
                        scriptName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginCancelScript(string scriptName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CancelScript", new object[] {
                        scriptName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndCancelScript(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void CancelScriptAsync(string scriptName)
        {
            this.CancelScriptAsync(scriptName, null);
        }

        /// <remarks/>
        public void CancelScriptAsync(string scriptName, object userState)
        {
            if ((this.CancelScriptOperationCompleted == null))
            {
                this.CancelScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelScriptOperationCompleted);
            }
            this.InvokeAsync("CancelScript", new object[] {
                        scriptName}, this.CancelScriptOperationCompleted, userState);
        }

        private void OnCancelScriptOperationCompleted(object arg)
        {
            if ((this.CancelScriptCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelScriptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-pelco-com:service:ScriptControl:1#DeleteScript", RequestNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", ResponseNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteScript([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string scriptName)
        {
            this.Invoke("DeleteScript", new object[] {
                        scriptName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteScript(string scriptName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteScript", new object[] {
                        scriptName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndDeleteScript(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void DeleteScriptAsync(string scriptName)
        {
            this.DeleteScriptAsync(scriptName, null);
        }

        /// <remarks/>
        public void DeleteScriptAsync(string scriptName, object userState)
        {
            if ((this.DeleteScriptOperationCompleted == null))
            {
                this.DeleteScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScriptOperationCompleted);
            }
            this.InvokeAsync("DeleteScript", new object[] {
                        scriptName}, this.DeleteScriptOperationCompleted, userState);
        }

        private void OnDeleteScriptOperationCompleted(object arg)
        {
            if ((this.DeleteScriptCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScriptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-pelco-com:service:ScriptControl:1#QueryScripts", RequestNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", ResponseNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("scriptList", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ScriptList QueryScripts([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ScriptQuery scriptQuery)
        {
            object[] results = this.Invoke("QueryScripts", new object[] {
                        scriptQuery});
            return ((ScriptList)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQueryScripts(ScriptQuery scriptQuery, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QueryScripts", new object[] {
                        scriptQuery}, callback, asyncState);
        }

        /// <remarks/>
        public ScriptList EndQueryScripts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ScriptList)(results[0]));
        }

        /// <remarks/>
        public void QueryScriptsAsync(ScriptQuery scriptQuery)
        {
            this.QueryScriptsAsync(scriptQuery, null);
        }

        /// <remarks/>
        public void QueryScriptsAsync(ScriptQuery scriptQuery, object userState)
        {
            if ((this.QueryScriptsOperationCompleted == null))
            {
                this.QueryScriptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryScriptsOperationCompleted);
            }
            this.InvokeAsync("QueryScripts", new object[] {
                        scriptQuery}, this.QueryScriptsOperationCompleted, userState);
        }

        private void OnQueryScriptsOperationCompleted(object arg)
        {
            if ((this.QueryScriptsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryScriptsCompleted(this, new QueryScriptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-pelco-com:service:ScriptControl:1#ExecuteScript", RequestNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", ResponseNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pid", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ExecuteScript([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string scriptName)
        {
            object[] results = this.Invoke("ExecuteScript", new object[] {
                        scriptName});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginExecuteScript(string scriptName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ExecuteScript", new object[] {
                        scriptName}, callback, asyncState);
        }

        /// <remarks/>
        public int EndExecuteScript(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void ExecuteScriptAsync(string scriptName)
        {
            this.ExecuteScriptAsync(scriptName, null);
        }

        /// <remarks/>
        public void ExecuteScriptAsync(string scriptName, object userState)
        {
            if ((this.ExecuteScriptOperationCompleted == null))
            {
                this.ExecuteScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScriptOperationCompleted);
            }
            this.InvokeAsync("ExecuteScript", new object[] {
                        scriptName}, this.ExecuteScriptOperationCompleted, userState);
        }

        private void OnExecuteScriptOperationCompleted(object arg)
        {
            if ((this.ExecuteScriptCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScriptCompleted(this, new ExecuteScriptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-pelco-com:service:ScriptControl:1#HaltScript", RequestNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", ResponseNamespace = "urn:schemas-pelco-com:service:ScriptControl:1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HaltScript([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string scriptName, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int pid, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool pidSpecified)
        {
            this.Invoke("HaltScript", new object[] {
                        scriptName,
                        pid,
                        pidSpecified});
        }

        /// <remarks/>
        public System.IAsyncResult BeginHaltScript(string scriptName, int pid, bool pidSpecified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("HaltScript", new object[] {
                        scriptName,
                        pid,
                        pidSpecified}, callback, asyncState);
        }

        /// <remarks/>
        public void EndHaltScript(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void HaltScriptAsync(string scriptName, int pid, bool pidSpecified)
        {
            this.HaltScriptAsync(scriptName, pid, pidSpecified, null);
        }

        /// <remarks/>
        public void HaltScriptAsync(string scriptName, int pid, bool pidSpecified, object userState)
        {
            if ((this.HaltScriptOperationCompleted == null))
            {
                this.HaltScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaltScriptOperationCompleted);
            }
            this.InvokeAsync("HaltScript", new object[] {
                        scriptName,
                        pid,
                        pidSpecified}, this.HaltScriptOperationCompleted, userState);
        }

        private void OnHaltScriptOperationCompleted(object arg)
        {
            if ((this.HaltScriptCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HaltScriptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:schemas-pelco-com:service:ScriptControl:1")]
    public partial class ScriptQuery
    {

        private string nameField;

        private string descriptionField;

        private int idField;

        private bool idFieldSpecified;

        private int ownerField;

        private bool ownerFieldSpecified;

        private bool executingField;

        private bool executingFieldSpecified;

        private string queryIdField;

        private int nextEntryField;

        private bool nextEntryFieldSpecified;

        private int maxEntriesField;

        private bool maxEntriesFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified
        {
            get
            {
                return this.idFieldSpecified;
            }
            set
            {
                this.idFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int owner
        {
            get
            {
                return this.ownerField;
            }
            set
            {
                this.ownerField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ownerSpecified
        {
            get
            {
                return this.ownerFieldSpecified;
            }
            set
            {
                this.ownerFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool executing
        {
            get
            {
                return this.executingField;
            }
            set
            {
                this.executingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool executingSpecified
        {
            get
            {
                return this.executingFieldSpecified;
            }
            set
            {
                this.executingFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queryId
        {
            get
            {
                return this.queryIdField;
            }
            set
            {
                this.queryIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int nextEntry
        {
            get
            {
                return this.nextEntryField;
            }
            set
            {
                this.nextEntryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nextEntrySpecified
        {
            get
            {
                return this.nextEntryFieldSpecified;
            }
            set
            {
                this.nextEntryFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxEntries
        {
            get
            {
                return this.maxEntriesField;
            }
            set
            {
                this.maxEntriesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxEntriesSpecified
        {
            get
            {
                return this.maxEntriesFieldSpecified;
            }
            set
            {
                this.maxEntriesFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:schemas-pelco-com:service:ScriptControl:1")]
    public partial class Script
    {

        private string nameField;

        private string descriptionField;

        private int idField;

        private string ownerField;

        private string[] pidsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string owner
        {
            get
            {
                return this.ownerField;
            }
            set
            {
                this.ownerField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("pid", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] pids
        {
            get
            {
                return this.pidsField;
            }
            set
            {
                this.pidsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:schemas-pelco-com:service:ScriptControl:1")]
    public partial class ScriptList
    {

        private Script[] scriptsField;

        private ScriptListQueryId queryIdField;

        private int nextEntryField;

        private bool nextEntryFieldSpecified;

        private int maxEntriesField;

        private bool maxEntriesFieldSpecified;

        private int maxPresetsField;

        private bool maxPresetsFieldSpecified;

        private int maxPatternsField;

        private bool maxPatternsFieldSpecified;

        private int totalEntriesField;

        private bool totalEntriesFieldSpecified;

        private string resultURIField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("script", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public Script[] scripts
        {
            get
            {
                return this.scriptsField;
            }
            set
            {
                this.scriptsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ScriptListQueryId queryId
        {
            get
            {
                return this.queryIdField;
            }
            set
            {
                this.queryIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int nextEntry
        {
            get
            {
                return this.nextEntryField;
            }
            set
            {
                this.nextEntryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nextEntrySpecified
        {
            get
            {
                return this.nextEntryFieldSpecified;
            }
            set
            {
                this.nextEntryFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxEntries
        {
            get
            {
                return this.maxEntriesField;
            }
            set
            {
                this.maxEntriesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxEntriesSpecified
        {
            get
            {
                return this.maxEntriesFieldSpecified;
            }
            set
            {
                this.maxEntriesFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxPresets
        {
            get
            {
                return this.maxPresetsField;
            }
            set
            {
                this.maxPresetsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxPresetsSpecified
        {
            get
            {
                return this.maxPresetsFieldSpecified;
            }
            set
            {
                this.maxPresetsFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxPatterns
        {
            get
            {
                return this.maxPatternsField;
            }
            set
            {
                this.maxPatternsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxPatternsSpecified
        {
            get
            {
                return this.maxPatternsFieldSpecified;
            }
            set
            {
                this.maxPatternsFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int totalEntries
        {
            get
            {
                return this.totalEntriesField;
            }
            set
            {
                this.totalEntriesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalEntriesSpecified
        {
            get
            {
                return this.totalEntriesFieldSpecified;
            }
            set
            {
                this.totalEntriesFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string resultURI
        {
            get
            {
                return this.resultURIField;
            }
            set
            {
                this.resultURIField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:schemas-pelco-com:service:ScriptControl:1")]
    public partial class ScriptListQueryId
    {

        private int timeoutField;

        private bool timeoutFieldSpecified;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int timeout
        {
            get
            {
                return this.timeoutField;
            }
            set
            {
                this.timeoutField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeoutSpecified
        {
            get
            {
                return this.timeoutFieldSpecified;
            }
            set
            {
                this.timeoutFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void BeginScriptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void EndScriptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CancelScriptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteScriptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void QueryScriptsCompletedEventHandler(object sender, QueryScriptsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryScriptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QueryScriptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ScriptList Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ScriptList)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ExecuteScriptCompletedEventHandler(object sender, ExecuteScriptCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScriptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExecuteScriptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void HaltScriptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
